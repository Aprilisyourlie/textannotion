<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.annotation.dao.DtExtractionMapper" >
  <resultMap id="BaseResultMap" type="com.annotation.model.DtExtraction" >
    <id column="dt_eid" property="dteId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="subtask_id" property="subtaskId" jdbcType="INTEGER" />
    <result column="userid" property="userId" jdbcType="INTEGER" />
    <result column="entity_id" property="entityId" jdbcType="VARCHAR" />
    <result column="entity_name" property="entityName" jdbcType="VARCHAR" />
    <result column="startindex" property="startIndex" jdbcType="INTEGER" />
    <result column="endindex" property="endIndex" jdbcType="INTEGER" />
    <result column="entity" property="entity" jdbcType="VARCHAR" />
  </resultMap>



  <!--设置数据库自增长-->
  <update id="alterDtExtractionTable">
    ALTER TABLE dt_extraction AUTO_INCREMENT =1
  </update>


    <select id="selectByTaskidAndSubtaskid" parameterType="Integer" resultMap="BaseResultMap">
        select * from dt_extraction
         where task_id = #{taskId} and subtask_id = #{subtaskId}
    </select>


  <insert id="insert" parameterType="com.annotation.model.DtExtraction" >
    insert into dt_extraction (dt_eid,task_id,subtask_id,userid,entity_id,entity_name,startindex,endindex,entity)
    values (#{dteId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{subtaskId,jdbcType=INTEGER},
  #{userId,jdbcType=INTEGER}, #{entityId,jdbcType=VARCHAR},#{entityName,jdbcType=VARCHAR},
  #{startIndex,jdbcType=INTEGER},#{endIndex,jdbcType=INTEGER},#{entity,jdbcType=VARCHAR})
  </insert>




  <delete id="deleteByDteId" parameterType="java.lang.Integer" >
    delete from dt_extraction
    where dt_eid = #{dteId}
  </delete>

    <delete id="deleteBeforeUpdate" parameterType="java.lang.Integer" >
    delete from dt_extraction
    where userid = #{userId} and task_id = #{taskId} and subtask_id = #{subtaskId}
  </delete>



  <delete id="deleteAllByTaskId" parameterType="java.lang.Integer" >
    delete from dt_extraction
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.annotation.model.DtExtraction" >
    update dt_extraction
    set dt_eid = #{dteId,jdbcType=INTEGER},
      label_id = #{labelId,jdbcType=INTEGER},
      index_begin = #{indexBegin,jdbcType=INTEGER},
      index_end = #{indexEnd,jdbcType=INTEGER}
    where dtd_id = #{dtdId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select dtd_id, dt_eid, label_id, index_begin, index_end
    from dt_extraction
    where dtd_id = #{dtdId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select dtd_id, dt_eid, label_id, index_begin, index_end
    from dt_extraction
  </select>

    <select id="selectCurrentDone" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select * from dt_extraction
    where userid = #{userId} and task_id = #{taskId} and subtask_id = #{subtaskId}
  </select>

  <resultMap id="extractionDataOut" type="com.annotation.model.entity.ExtractionData" >
    <result column="docName" property="docName" jdbcType="VARCHAR" />
    <result column="paraIndex" property="paraIndex" jdbcType="INTEGER" />
    <result column="paraContent" property="paraContent" jdbcType="VARCHAR" />
      <collection property="entityList" ofType="Map">
          <result column="entityId" property="entityId" jdbcType="VARCHAR" />
          <result column="entityLabel" property="entityLabel" jdbcType="VARCHAR" />
          <result column="startIndex" property="startIndex" jdbcType="INTEGER" />
          <result column="endIndex" property="endIndex" jdbcType="INTEGER" />
          <result column="entity" property="entity" jdbcType="VARCHAR" />
      </collection>
      <collection property="relationList" ofType="Map">
          <result column="relationLabel" property="relationLabel" jdbcType="VARCHAR" />
          <result column="headEntity" property="headEntity" jdbcType="VARCHAR" />
          <result column="tailEntity" property="tailEntity" jdbcType="VARCHAR" />
      </collection>
  </resultMap>

  <select id="getExtractionDataOut" parameterType="Integer" resultMap="extractionDataOut">
        SELECT  dc.filename docName,pa.paraindex paraIndex,
        pa.paracontent paraContent,
        dte.entity_id entityId,dte.entity_name entityLabel,
        dte.startindex startIndex,dte.endindex endIndex,
        dte.entity,
        dter.relation relationLabel,dter.headentity headEntity,
        dter.tailentity tailEntity
        FROM task dt
        left join user_subtask us on us.task_id=dt.tid
        left join paragraph pa on pa.pid = us.subtask_id
        left join document dc on dc.did=pa.document_id
        left join dt_extraction dte on dte.subtask_id=us.subtask_id
        left join dt_extraction_relation dter on dter.subtask_id=us.subtask_id
        where dt.tid=#{tid} and us.done = "yes"

        order by pa.pid;
    </select>



    <!--
    dt_eid,task_id,subtask_id,userid,entity_id,entity_name,startindex,endindex,entity
    #{dteId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{subtaskId,jdbcType=INTEGER},
    #{userId,jdbcType=INTEGER}, #{entityId,jdbcType=VARCHAR},#{entityName,jdbcType=VARCHAR},
    #{startIndex,jdbcType=INTEGER},#{endIndex,jdbcType=INTEGER},#{entity,jdbcType=VARCHAR}
    -->

    <!--&lt;!&ndash;信息抽取查询文件的所有段落以及已经做了的标签  &ndash;&gt;-->
    <!--<resultMap id="ExtractionParaLabelByDocId" type="com.annotation.model.entity.ParagraphLabelEntity">-->
    <!--<id column="pid" property="pid" jdbcType="INTEGER" />-->
    <!--<result column="paracontent" property="paracontent" jdbcType="VARCHAR" />-->
    <!--<result column="paraindex" property="paraindex" jdbcType="INTEGER" />-->
    <!--<result column="document_id" property="documentId" jdbcType="INTEGER" />-->
    <!--<result column="dotime" property="dotime" jdbcType="VARCHAR" />-->
    <!--<result column="comptime" property="comptime" jdbcType="VARCHAR" />-->
    <!--<result column="dtstatus" property="dtstatus" jdbcType="VARCHAR" />-->
    <!--<collection property="alreadyDone" ofType="Map">-->
    <!--<result column="label_id" property="label_id" jdbcType="INTEGER" />-->
    <!--<result column="index_begin" property="index_begin" jdbcType="INTEGER" />-->
    <!--<result column="index_end" property="index_end" jdbcType="INTEGER" />-->
    <!--<result column="color" property="color" jdbcType="VARCHAR" />-->
    <!--</collection>-->
    <!--</resultMap>-->

    <!--<select id="selectExtractionParaLabel" parameterType="Integer" resultMap="ExtractionParaLabelByDocId">-->
    <!--select p.pid, p.paracontent, p.paraindex, p.document_id,-->
    <!--dte.label_id, dte.index_begin,dte.index_end,-->
    <!--tl.color,-->
    <!--dp.dotime,dp.comptime,dp.dtstatus-->
    <!--from paragraph p-->
    <!--left join d_paragraph dp on (dp.dtask_id=#{dTaskId} and p.pid=dp.paragraph_id)-->
    <!--left join dt_extraction dte on dp.dtid =dte.dt_eid-->
    <!--left join task_label tl on tl.task_id =#{taskId} and dte.label_id=tl.label_id-->
    <!--where p.document_id=#{docId}-->
    <!--ORDER BY p.pid-->
    <!--</select>-->

    <!--&lt;!&ndash;<select id="selectExtraction" parameterType="Integer" resultMap="ExtractionParaLabelByDocId">&ndash;&gt;-->
    <!--&lt;!&ndash;select p.pid, p.paracontent, p.paraindex, p.document_id&ndash;&gt;-->
    <!--from paragraph p-->
    <!--where p.document_id=#{docId}-->
    <!--ORDER BY p.pid-->
    <!--</select>-->






    <!--<select id="selectExtractionWithStatus" parameterType="Map" resultMap="ExtractionParaLabelByDocId">-->
    <!--select p.pid, p.paracontent, p.paraindex, p.document_id,-->
    <!--dte.label_id, dte.index_begin,dte.index_end,-->
    <!--tl.color,-->
    <!--dp.dotime,dp.comptime,dp.dtstatus-->
    <!--from paragraph p-->
    <!--left join d_paragraph dp on (dp.dtask_id=#{dTaskId} and p.pid=dp.paragraph_id)-->
    <!--left join dt_extraction dte on dp.dtid =dte.dt_eid-->
    <!--left join task_label tl on tl.task_id =#{taskId} and dte.label_id=tl.label_id-->
    <!--where p.document_id=#{docId} and ( dp.dtstatus =#{status} or dp.dtstatus is null)-->
    <!--ORDER BY p.pid-->
    <!--</select>-->
</mapper>